ls(org.Dm.eg.db)
select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
GODRO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
View(GODRO)
sampleGOdata <- new("topGOdata",
description = "Simple session", ontology = "BP",
allGenes = GOAED, geneSel = topDiffGenes,
nodeSize = 10,
annot = annFUN.db, affyLib = GODRO)
View(GODRO)
gene2GO = GODRO[,c(-3,-4)]
View(gene2GO)
head(gene2GO)
GODRO<-GODRO[,c(-3,-4)]
GODRO<-as.factor(GODRO$GO)
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GO<-GODRO[,c(-3,-4)]
GODRO<-as.factor(GO$GO)
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GO<-GO[,c(-3,-4)]
GODRO<-as.factor(GO$GO)
names(GODRO)<-GO$ENSEMBL
GODRO
sampleGOdata <- new("topGOdata",
description = "Simple session", ontology = "BP",
allGenes = GOAED, geneSel = topDiffGenes,
nodeSize = 10,
annot = annFUN.db, affyLib = GODRO)
rn1<-paste(GO[,c(-3,-4)], sep="")
gene2GO<-GO[,c(-3,-4)]
rn<-paste(GO[,c(-3,-4)], sep="")
gene2GO<-GO[,c(-3,-4)]
names(GO)<-rn
names(gene2GO)<-rn
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
rn<-paste(GO[,c(-3,-4)], sep="")
gene2GO<-GO[,c(-3,-4)]
names(gene2GO)<-rn
View(gene2GO)
head(gene2GO)
GO<-GO[,c(-3,-4)]
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GO<-GO[,c(-3,-4)]
rn<-paste(GO[,-1], sep="")
gene2GO<-GO[,-1]
names(gene2GO)<-rn
head(gene2GO)
GO
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GO<-GO[,c(-3,-4)]
rn<-paste(GO[,1], sep="")
gene2GO<-GO[,-1]
names(gene2GO)<-rn
head(gene2GO)
class(gene2GO)
sampleGOdata <- new("topGOdata",
description = "Simple session", ontology = "BP",
allGenes = GOAED, geneSel = topDiffGenes,
nodeSize = 10,
annot = annFUN.db, affyLib = gene2GO)
View(orthologous_AED)
rn<-paste(orthologous_AED[,1], sep="")
P_values<-orthologous_AED[,-1]
names(P_values)<-rn
head(P_values)
class(P_values)
sampleGOdata<-new("topGOdata",description = "GO terms en B.germanica", ontology = "BP",allGenes = P_values, geneSel = topDiffGenes,nodeSize = 10,annot = annFUN.gene2GO, gene2GO = gene2GO)
as.numeric(P_values)
rn<-paste(orthologous_AED[,1], sep="")
P_values<-orthologous_AED[,-1]
as.numeric(P_values)
names(P_values)<-rn
as.numeric(gene2GO)
as.factor(gene2GO)
names(gene2GO)<-rn
rn<-paste(orthologous_AED[,1], sep="")
P_values<-orthologous_AED[,-1]
as.numeric(P_values)
names(P_values)<-rn
GO<-select(org.Dm.eg.db,keys=head((keys(org.Dm.eg.db,keytype = "ENSEMBL"))),columns = c("GO"),keytype = "ENSEMBL")
GO<-GO[,c(-3,-4)]
rn<-paste(GO[,1], sep="")
gene2GO<-GO[,-1]
names(gene2GO)<-rn
topDiffGenes <- function(allScore){
return(allScore < 0.01)
}
sum(topDiffGenes(P_values))
sampleGOdata<-new("topGOdata",description = "GO terms en B.germanica", ontology = "BP",allGenes = P_values, geneSel = topDiffGenes,nodeSize = 10,annot = annFUN.gene2GO, gene2GO = gene2GO)
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_GO<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_GO)<-orthologous_AED$orthologous_AED
GOdata <- new("topGOdata",
ontology = "BP",
allGenes = GOAED,
nodeSize = 5,
annot = annFUN.org,
mapping = "org.Dm.eg.db",
ID = "symbol")
ALL
data(ALL)
View(ALL)
View(org.Dm.eg.db)
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_GO<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_GO<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_GO)<-orthologous_AED$orthologous_AED
topDiffGenes <- function(allScore) {
return(allScore < 0.01)
}
GOdata <- new("topGOdata",description = "GO analysis of ALL data; B-cell vs T-cell",
ontology = "BP",allGenes = GOAED,
geneSel = topDiffGenes,annot = annFUN.db,
nodeSize = 40,affyLib = org.Dm.eg.db)
GOAED<-as.vector(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_GO<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_GO)<-orthologous_AED$orthologous_AED
topDiffGenes <- function(allScore) {
return(allScore < 0.01)
}
GOdata <- new("topGOdata",description = "GO analysis of ALL data; B-cell vs T-cell",
ontology = "BP",allGenes = GOAED,
geneSel = topDiffGenes,annot = annFUN.db,
nodeSize = 40,affyLib = org.Dm.eg.db)
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
is.numeric(GOAED)
names(GOAED)<-orthologous_AED$orthologous_AED
is.numeric(GOAED)
GOdata <- new("topGOdata",description = "GO analysis of ALL data; B-cell vs T-cell",
ontology = "BP",allGenes = GOAED,
geneSel = topDiffGenes,annot = annFUN.db,
nodeSize = 40,affyLib = org.Dm.eg.db)
GOAED<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_GO<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_GO)<-orthologous_AED$orthologous_AED
topDiffGenes <- function(allScore) {
return(allScore < 0.01)
}
GOdata <- new("topGOdata",description = "GO analysis of ALL data; B-cell vs T-cell",
ontology = "BP",allGenes = GOAED,
geneSel = topDiffGenes,annot = annFUN.db,
nodeSize = 40,affyLib = org.Dm.eg.db)
geneList <- getPvalues(exprs(org.Dm.eg.db), classlabel = y, alternative = "greater")
library(multtest)
BiocManager::install("multtest")
library(multtest)
geneList <- getPvalues(exprs(org.Dm.eg.db), classlabel = y, alternative = "greater")
?genefilter
class(org.Dm.eg.db)
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R', echo=TRUE)
View(result_GO)
result_GO
?select
select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "ESEMBL"), columns = c("ESEMBL"),keytype="ESEMBL")
keytypes(org.Dm.eg.db)
select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "ENSEMBL"), columns = c("ENSEMBL"),keytype="ENSEMBL")
select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "ENSEMBL"), columns = c("ENSEMBL","GO"),keytype="ENSEMBL")
select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "GO"), columns = c("ENSEMBL","GO"),keytype="GO")
result_V1<-as.numeric(orthologous_AED$EXPpvalue)
names(GOAED)<-orthologous_AED$orthologous_AED
result_V2<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_GO)<-orthologous_AED$orthologous_AED
result_V1<-as.numeric(orthologous_AED$EXPpvalue)
names(result_V1)<-orthologous_AED$orthologous_AED
result_V2<-result[match(orthologous_AED$EXPpvalue,result$pvalue),]
rownames(result_V2)<-orthologous_AED$orthologous_AED
GOTERMS<-select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "ENSEMBL"), columns = c("ENSEMBL","GO"),keytype="ENSEMBL")
View(GOTERMS)
GOTERMS<-GOTERMS[,c(-3,-4)]
View(GOTERMS)
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R', echo=TRUE)
EXP<-read.table("AED_BGER-mod.list",header = TRUE,sep = "\t",dec = ",",row.names = NULL)
EXP<-data.frame(EXP$row.names,EXP$pvalue,row.names = NULL)
names(EXP)<-c("row.names", "pvalue")
orthologous_AED<-orthologous$Drosophila[match(EXP$row.names,orthologous$row.names)]
orthologous<-read.table("1_2_1_orthologs.tab",header = FALSE,sep = "\t",row.names = NULL)
View(orthologous)
View(EXP)
View(EXP)
orthologous<-read.table("1_2_1_orthologs.tab",header = FALSE,sep = "\t",row.names = NULL)
names(orthologous)<-c(Drosophila,B_germanica)
View(EXP)
orthologous<-read.table("1_2_1_orthologs.tab",header = FALSE,sep = "\t",row.names = NULL)
names(orthologous)<-c(Drosophila,B_germanica)
EXP<-read.table("AED_BGER-mod.list",header = TRUE,sep = "\t",dec = ",",row.names = NULL)
orthologous<-read.table("1_2_1_orthologs.tab",header = FALSE,sep = "\t",row.names = NULL)
names(orthologous)<-c("Drosophila","B_germanica")
EXP<-read.table("AED_BGER-mod.list",header = TRUE,sep = "\t",dec = ",",row.names = NULL)
EXP<-data.frame(EXP$row.names,EXP$pvalue,row.names = NULL)
names(EXP)<-c("B_germanica", "pvalue")
orthologous_AED<-orthologous$Drosophila[match(EXP$B_germanica,orthologous$B_germanica)]
orthologous_AED<-orthologous_AED[!is.na(orthologous_AED)]
EXPpvalue<-orthologous$B_germanica[match(EXP$B_germanica,orthologous$B_germanica)]
EXPpvalue<-EXPpvalue[!is.na(EXPpvalue)]
EXPpvalue<-EXP$pvalue[match(EXPpvalue,EXP$B_germanica)]
orthologous_AED<-data.frame(orthologous_AED,EXPpvalue)
write.table(orthologous_AED,file="Drosophila_AED.list",sep = "\t",col.names=c("genes","pvalue"),row.names =FALSE)
View(orthologous_AED)
names(orthologous_AED)<-c("Drosophila","pvalue")
write.table(orthologous_AED,file="Drosophila_AED.list",sep = "\t",col.names=c("genes","pvalue"),row.names =FALSE)
View(orthologous_AED)
result_V1<-as.numeric(orthologous_AED$pvalue)
names(result_V1)<-orthologous_AED$Drosophila
result_V2<-result[match(orthologous_AED$pvalue,result$pvalue),]
rownames(result_V2)<-orthologous_AED$Drosophila
GOTERMS<-select(org.Dm.eg.db, keys=keys(org.Dm.eg.db,keytype = "ENSEMBL"), columns = c("ENSEMBL","GO"),keytype="ENSEMBL")
GOTERMS<-GOTERMS[,c(-3,-4)]
View(result_V2)
result_V2
result_V<-as.numeric(orthologous_AED$pvalue)
names(result_V1)<-orthologous_AED$Drosophila
result_D<-result[match(orthologous_AED$pvalue,result$pvalue),]
rownames(result_V2)<-orthologous_AED$Drosophila
result_V
head(result_V)
result_V<-as.numeric(orthologous_AED$pvalue)
names(result_V)<-orthologous_AED$Drosophila
result_D<-result[match(orthologous_AED$pvalue,result$pvalue),]
rownames(result_D)<-orthologous_AED$Drosophila
head(result_V)
View(GOTERMS)
GObyENSEMBL<-readMappings(file = GOTERMS)
write.table(GOTERMS,file="GOTERMS.list",sep = "\t",col.names=c("ENSEMBL","GO"),row.names =FALSE)
GObyENSEMBL<-readMappings(file = "GOTERMS.list")
View(GObyENSEMBL)
View(GOTERMS)
View(GObyENSEMBL)
bg_genes<-names(GObyENSEMBL)
head(bg_genes)
bg_genes
write.table(GOTERMS,file="GOTERMS.tsv",sep = "\t",col.names=c("ENSEMBL","GO"),row.names =FALSE)
GObyENSEMBL<-readMappings(file = "GOTERMS.tsv")
bg_genes<-names(GObyENSEMBL)
bg_genes
View(GObyENSEMBL)
View(result_D)
result_V
result_D
geneList<-factor(as.integer(GOTERMS$ENSEMBL %in% names(result_D)))
names(geneList)<-GOTERMS$ENSEMBL
str(geneList)
GOdata <- new("topGOdata", ontology = "MF", allGenes = geneList, annot = annFUN.gene2GO, gene2GO = GOTERMS)
library(geneList)
data("geneList")
geneList
class(geneList)
head(result_V)
class(result_V)
data(ALL)
library(ALL)
data(ALL)
ALL
View(AED)
View(ALL)
geneList<-as.numeric(orthologous_AED$pvalue)
names(geneList)<-orthologous_AED$Drosophila
affyLib<-paste(annotation(AED), "db", sep = ".")
affyLib<-paste(annotation(ALL), "db", sep = ".")
names(geneList)
X<-z <- select(org.Dm.eg.db, names(geneList),"GO")
X<-select(org.Dm.eg.db, names(geneList),"GO")
keytypes(org.Dm.eg.db)
X<-X<-select(org.Dm.eg.db, keys=names(geneList),"ENSEMBL")
X<-select(org.Dm.eg.db, keys=names(geneList),"ENSEMBL")
keys(org.Dm.eg.db,keytype = "ENSEMBL")
keys(org.Dm.eg.db)
keys(hgu95av2.db, keytype="UNIGENE") %in% names(geneList)
keys(org.Dm.eg.db, keytype="ENSEMBL") %in% names(geneList)
keys(org.Dm.eg.db, keytype="ENSEMBL")
match[keys(hgu95av2.db, keytype="UNIGENE"),names(geneList)]
match[keys(org.Dm.eg.db, keytype="ENSEMBL"),names(geneList)]
match[names(geneList),keys(org.Dm.eg.db, keytype="ENSEMBL")]
names(geneList)
Dlist<-as.numeric(orthologous_AED$pvalue)
names(DList)<-orthologous_AED$Drosophila
names(Dlist)<-orthologous_AED$Drosophila
names(geneList)
library(geneList)
data("geneList")
names(geneList)
install.packages("hgu95av2.db")
library(hgu95av2.db)
X<-select(org.Dm.eg.db, names(Dlist),"ENSEMBL")
X<-select(org.Dm.eg.db, names(Dlist),keys = "ENSEMBL")
X<-select(org.Dm.eg.db, names(Dlist),keytype = "ENSEMBL")
head(keys(org.Dm.eg.db))
head(keys(org.Dm.eg.db,keytype = "ENSEMBL"))
keyAED<-keys(org.Dm.eg.db,keytype = "ENSEMBL") == names(Dlist)
keyAED<-keys(org.Dm.eg.db,keytype = "ENSEMBL") %in% names(Dlist)
keyAED
keyAED<-keys(org.Dm.eg.db,keytype = "ENSEMBL")[match names(Dlist),(keys(org.Dm.eg.db,keytype = "ENSEMBL"))]
keyAED<-keys(org.Dm.eg.db,keytype = "ENSEMBL")[match (names(Dlist),(keys(org.Dm.eg.db,keytype = "ENSEMBL")))]
keyAED
View(orthologous_AED)
select(org.Dm.eg.db, keys=keyAED,keytype="GO")
select(org.Dm.eg.db, keys=keyAED,columns=c("ENSEMBL","GO"),keytype="ENSEMBL")
select(org.Dm.eg.db, names(Dlist), "ENSEMBL")
keytypes(org.Dm.eg.db)
columns(org.Dm.eg.db)
select(org.Dm.eg.db, keyAED,columns=c("ENSEMBL","GO"),"ENSEMBL")
select(org.Dm.eg.db, keyAED,"ENSEMBL")
select(org.Dm.eg.db, keyAED,columns = "ENSEMBL")
sampleGOdata<-new("topGOdata", description = "whatevs",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
View(sampleGOdata)
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R')
Dlist<-as.numeric(orthologous_AED$pvalue)
names(Dlist)<-orthologous_AED$Drosophila
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
topDiffGenes <- function(allScore) {
return(allScore < 0.01)
}
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
View(sampleGOdata)
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 5, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 40, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
sampleGOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
description(sampleGOdata)
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
genes(GOdata)
numGenes(GOdata)
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, mapping = "org.Dm.eg")
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "alias", mapping = "org.Dm.eg")
runTest(GOdata, "classic","fisher")
resultFis<-runTest(GOdata, "classic","fisher")
score(resultFis)
hist(score(resultFis), 30, xlab = "p-values")
hist(score(resultFis), xlab = "p-values")
topDiffGenes(Dlist)
sum(topDiffGenes(Dlist))
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "ensembl", mapping = "org.Dm.eg")
resultFis<-runTest(GOdata, "classic","fisher")
resultFis
genes(GOdata)
score(resultFis)
hist(score(resultFis), xlab = "p-values")
hist(score(resultFis),50, xlab = "p-values")
hist(score(resultFis),10000, xlab = "p-values")
hist(score(resultFis),100, xlab = "p-values")
geneData(resultFis)
allRes<-GenTable(GOdata, classic = resultFis, orderBy = "classic", ranksOf = "classic", topNodes = 100)
View(allRes)
allRes<-GenTable(GOdata, classic = resultFis, orderBy = "classic", ranksOf = "Significant", topNodes = 100)
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 5, useInfo = 'all')
printGraph(GOdata, resultFis, firstSigNodes = 5, fn.prefix = "tGO", useInfo = "all", pdfSW = TRUE)
test.stat<-new("weightCount", testStatistic = GOFisherTest, name = "Fisher test")
resultWeight<-getSigGroups(GOdata, test.stat)
allRes<-GenTable(GOdata, classic = resultFis,weight = resultWeight, orderBy = "classic", ranksOf = "classic", topNodes = 100)
View(allRes)
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 5, useInfo = 'all')
hist(score(resultWeight),50, xlab = "p-values")
hist(score(resultFis),50, xlab = "p-values")
hist(score(resultWeight),50, xlab = "p-values")
BiocManager::install("Rgraphviz")
library(Rgraphviz)
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 5, useInfo = 'all')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 10, useInfo = 'all')
showSigOfNodes(GOdata, score(resultWeight), firstSigNodes = 10, useInfo = 'def')
showSigOfNodes(GOdata, score(resultWeight), firstSigNodes = 10, useInfo = 'pval')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 10, useInfo = 'pval')
showSigOfNodes(GOdata, score(resultWeight), firstSigNodes = 10, useInfo = 'pval')
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R', echo=TRUE)
citation("topGO")
citation("AnnotationDbi")
BiocManager::install("org.Dm.eg.db")
library(org.Dm.eg.db)
BiocManager::install("org.Dm.eg.db")
org.Dm.eg.db
View(DeSeqTrans)
org.Dm.eg_dbInfo()
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R')
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "ensembl", mapping = "org.Dm.eg")
resultFis<-runTest(GOdata, algorithm = "classic", statistic = "fisher")
resultKS<-runTest(GOdata, algorithm = "classic", statistic = "ks")
resultKS.elim<-runTest(GOdata, algorithm = "elim", statistic = "ks")
allRes<-GenTable(GOdata, classicFisher = resultFis, classicKS = resultKS, elimKS = resultKS.elim, orderBy = "elimKS", ranksOf = "classicFisher", topNodes = 75)
View(allRes)
allRes<-GenTable(GOdata, classicFisher = resultFis, elimKS = resultKS.elim, orderBy = "classicFisher", ranksOf = "elimKS", topNodes = 75)
View(allRes)
allRes<-GenTable(GOdata, classicFisher = resultFis, elimKS = resultKS.elim, orderBy = "elimKS", ranksOf = "classicFisher", topNodes = 75)
View(allRes)
resultFis
resultKS.elim
pValue.Fis<-score(resultFis)
pValue.elim<-score(resultKS.elim)[names(pValue.Fis)]
gstat<-termStat(GOdata, names(pValue.Fis))
gSize<-gstat$Annotated / max(gstat$Annotated) * 4
gCol<-colMap(gstat$Significant)
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 19, cex = gSize, col = gCol)
library(ColMap)
BiocManager::install("ColMap")
library(ColMap)
BiocManager::install(version = "3.2")
install.packages("installr")
library(installr)
updateR()
updateR()
BiocManager::install(version = "3.2")
BiocManager::install(version = "3.12")
colMap <- function(x) {
.col <- rep(rev(heat.colors(length(unique(x)))), time = table(x))
return(.col[match(1:length(x), order(x))])
}
gCol<-colMap(gstat$Significant)
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 19, cex = gSize, col = gCol)
names(orthologous_AED)<-c("Drosophila","pvalue")
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 100, cex = gSize, col = gCol)
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 20, cex = gSize, col = gCol)
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 50, cex = gSize, col = gCol)
plot(pValue.Fis, pValue.elim, xlab = "p-value Fis", ylab = "p-value KS elim", pch = 19, cex = gSize, col = gCol)
sel.go <- names(pValue.Fis)[pValue.elim < pValue.Fis]
cbind(termStat(GOdata, sel.go),elim = pValue.elim[sel.go],classic = pValue.Fis[sel.go])
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 10, useInfo = 'pval')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 19, useInfo = 'pval')
showSigOfNodes(GOdata, score(resultKS), firstSigNodes = 5, useInfo = 'pval')
showSigOfNodes(GOdata, score(resultKS), firstSigNodes = 5, useInfo = 'all')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 19, useInfo = 'all')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 19, useInfo = 'pvalue')
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 10, useInfo = 'pvalue')
sel.go <- names(pValue.Fis)[pValue.elim < pValue.Fis]
cbind(termStat(GOdata, sel.go),elim = pValue.elim[sel.go],classic = pValue.Fis[sel.go])
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 5, useInfo = 'all')
GOdata<-new("topGOdata", description = "GO terms para B.germanica",ontology = "BP", allGenes = Dlist, geneSel = topDiffGenes, nodeSize = 10, annot = annFUN.org, ID = "ensembl", mapping = "org.Dm.eg")
resultFis<-runTest(GOdata, algorithm = "classic", statistic = "fisher")
resultKS.elim<-runTest(GOdata, algorithm = "elim", statistic = "ks")
allRes<-GenTable(GOdata, classicFisher = resultFis, elimKS = resultKS.elim, orderBy = "elimKS", ranksOf = "classicFisher", topNodes = 75)
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 5, useInfo = 'all')
showSigOfNodes(GOdata, score(resultKS.elim), firstSigNodes = 5, useInfo = 'all')
source('~/Académico/Mastér en Bioinformatica y Bioestadística/TFM/Proyecto/Script AED.R')
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
showSigOfNodes(GOdata, score(resultKS.elim), firstSigNodes = 1, useInfo = 'all')
showSigOfNodes(GOdata, score(resultKS.elim), firstSigNodes = 5, useInfo = 'all')
allRes<-GenTable(GOdata, classicFisher = resultFis, elimKS = resultKS.elim, orderBy = "elimKS", ranksOf = "classicFisher", topNodes = 25)
View(allRes)
names(allRes)
write.table(allRes,file="GOresults.list",sep = "\t",col.names=names(allRes),row.names =FALSE)
showSigOfNodes(GOdata, score(resultFis), firstSigNodes = 10, useInfo = 'def')
showSigOfNodes(GOdata, score(resultKS.elim), firstSigNodes = 5, useInfo = 'def')
resultFis
resultKS.elim
